CREATE TABLE auth.users ( -- Dyutas users
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    code varchar(50) NOT NULL, -- synthetically generated code to be exposed to identify single user

    google_id varchar(255) NOT NULL, -- Google identification code for Dyutas

    -- denormalized for constraints
    email varchar(255) NOT NULL, -- perhaps taken from Google OAuth
    
    -- denormalized for performance
    profile_image_url varchar(255) NULL, -- not gonna use Google profile image
    username varchar(50) NULL, -- name to be displayed to other users

    signed_up_at timestamptz NOT NULL, -- when user newly signed up

    deleted_at timestamptz NULL -- when user account is deleted
);
CREATE UNIQUE INDEX idx_users_unique_code ON auth.users(code);
CREATE UNIQUE INDEX idx_users_unique_google_id_on_not_deleted ON auth.users(google_id) WHERE deleted_at IS NULL;
CREATE UNIQUE INDEX idx_users_unique_email_on_not_deleted ON auth.users(email) WHERE deleted_at IS NULL;

CREATE TABLE auth.user_snapshots( -- chageable column values of users over time
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,

    user_id bigint NOT NULL,

    -- denormalized columns
    email varchar(255) NOT NULL,
    profile_image_url varchar(255) NULL,
    username varchar(50) NULL,
    

    created_at timestamptz NOT NULL -- when user updated their own state
);
CREATE INDEX idx_user_snapshots_user_id_created_at_desc_for_user_join ON auth.user_snapshots(user_id, created_at DESC);